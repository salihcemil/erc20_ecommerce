{"ast":null,"code":"var _jsxFileName = \"/Users/salihcemil/Desktop/projects/ecommerce/frontend/src/Store.js\";\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:4000';\nconst ITEMS = [{\n  id: 1,\n  price: ethers.utils.parseEther('1')\n}, {\n  id: 2,\n  price: ethers.utils.parseEther('2')\n}];\n\nfunction Store(_ref) {\n  let {\n    paymentProcessor,\n    usdt\n  } = _ref;\n\n  const buy = async item => {\n    const response1 = await axios.get(`${API_URL}/api/getPaymentId/${item.id}`);\n    const accounts = await window.ethereum.request({\n      method: 'eth_accounts'\n    });\n    let publicKey;\n    window.ethereum.request({\n      method: 'eth_getEncryptionPublicKey',\n      params: [accounts[0]]\n    }).then(result => {\n      console.log(result);\n      publicKey = result;\n    }).catch(error => {\n      if (error.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        console.log(\"We can't encrypt anything without the key.\");\n      } else {\n        console.error(error);\n      }\n    });\n    console.log(publicKey);\n    let instance = await usdt.deployed();\n    const tx1 = await instance.approve(paymentProcessor.address, item.price);\n    await tx1.wait(); //const tx1 = await usdt.approve(paymentProcessor.address, item.price);  \n    //console.log('itemPrice: '+item.price + ' paymentId:' + response1.data.paymentId);\n\n    const tx2 = await paymentProcessor.pay(item.price, response1.data);\n    const receipt = await tx2.wait();\n    await new Promise(resolve => setTimeout(resolve, 5000));\n    const response2 = await axios.get(`${API_URL}/api/getItemUrl/${response1.data}`);\n    console.log(response2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [\"Buy Item1 - \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"front-weight-bold\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary float-right\",\n        onClick: () => buy(ITEMS[0]),\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [\"Buy Item2 - \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"front-weight-bold\",\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary float-right\",\n        onClick: () => buy(ITEMS[1]),\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/salihcemil/Desktop/projects/ecommerce/frontend/src/Store.js"],"names":["React","ethers","axios","API_URL","ITEMS","id","price","utils","parseEther","Store","paymentProcessor","usdt","buy","item","response1","get","accounts","window","ethereum","request","method","publicKey","params","then","result","console","log","catch","error","code","instance","deployed","tx1","approve","address","wait","tx2","pay","data","receipt","Promise","resolve","setTimeout","response2"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {ethers} from 'ethers';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:4000';\n\nconst ITEMS = [{\n    id: 1,\n    price: ethers.utils.parseEther('1')\n},{\n    id: 2,\n    price: ethers.utils.parseEther('2')\n}\n];\n\nfunction Store({ paymentProcessor, usdt }) {\n    const buy = async item => {\n      const response1 = await axios.get(`${API_URL}/api/getPaymentId/${item.id}`);\n\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      let publicKey;\n      window.ethereum.request({method: 'eth_getEncryptionPublicKey', params: [accounts[0]]}).\n        then((result) => {\n            console.log(result);\n          publicKey = result;\n        })\n        .catch((error) => {\n          if (error.code === 4001) {\n            // EIP-1193 userRejectedRequest error\n            console.log(\"We can't encrypt anything without the key.\");\n          } else {\n            console.error(error);\n          }\n        });\n        console.log(publicKey);\n\n      let instance = await usdt.deployed();\n      const  tx1 = await instance.approve(paymentProcessor.address, item.price);\n      await tx1.wait();\n      //const tx1 = await usdt.approve(paymentProcessor.address, item.price);  \n  \n      //console.log('itemPrice: '+item.price + ' paymentId:' + response1.data.paymentId);\n      const tx2 = await paymentProcessor.pay(item.price, response1.data);\n      const receipt = await tx2.wait();\n  \n      await new Promise(resolve => setTimeout(resolve, 5000)); \n      const response2 = await axios.get(`${API_URL}/api/getItemUrl/${response1.data}`)\n      console.log(response2);\n    };\n\n    return (\n        <ul className='list-group'>\n            <li className='list-group-item'>\n                Buy Item1 - <span className='front-weight-bold'>3</span>\n                <button \n                type='button'\n                className='btn btn-primary float-right'\n                onClick={()=>buy(ITEMS[0])}>\n                    Buy\n                </button>\n            </li>\n            <li className='list-group-item'>\n                Buy Item2 - <span className='front-weight-bold'>4</span>\n                <button type='button'\n                className='btn btn-primary float-right'\n                onClick={()=>buy(ITEMS[1])}>\n                    Buy\n                </button>\n            </li>\n        </ul>\n    )\n}\n\nexport default Store;"]},"metadata":{},"sourceType":"module"}