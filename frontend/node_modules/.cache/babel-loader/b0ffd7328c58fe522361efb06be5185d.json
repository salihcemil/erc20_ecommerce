{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst crypto_1 = __importDefault(require(\"crypto\"));\n\nconst constants_1 = require(\"../constants\");\n\nconst helpers_1 = require(\"../helpers\");\n\nfunction nodeRandomBytes(length) {\n  return crypto_1.default.randomBytes(length);\n}\n\nexports.nodeRandomBytes = nodeRandomBytes;\n\nfunction nodeAesEncrypt(iv, key, data) {\n  const cipher = crypto_1.default.createCipheriv(constants_1.AES_NODE_ALGO, key, iv);\n  return helpers_1.concatBuffers(cipher.update(data), cipher.final());\n}\n\nexports.nodeAesEncrypt = nodeAesEncrypt;\n\nfunction nodeAesDecrypt(iv, key, data) {\n  const decipher = crypto_1.default.createDecipheriv(constants_1.AES_NODE_ALGO, key, iv);\n  return helpers_1.concatBuffers(decipher.update(data), decipher.final());\n}\n\nexports.nodeAesDecrypt = nodeAesDecrypt;\n\nfunction nodeHmacSha256Sign(key, data) {\n  return crypto_1.default.createHmac(constants_1.HMAC_NODE_ALGO, Buffer.from(key)).update(data).digest();\n}\n\nexports.nodeHmacSha256Sign = nodeHmacSha256Sign;\n\nfunction nodeHmacSha512Sign(key, data) {\n  return crypto_1.default.createHmac(constants_1.SHA512_NODE_ALGO, Buffer.from(key)).update(data).digest();\n}\n\nexports.nodeHmacSha512Sign = nodeHmacSha512Sign;\n\nfunction nodeSha256(data) {\n  return crypto_1.default.createHash(constants_1.SHA256_NODE_ALGO).update(data).digest();\n}\n\nexports.nodeSha256 = nodeSha256;\n\nfunction nodeSha512(data) {\n  return crypto_1.default.createHash(constants_1.SHA512_NODE_ALGO).update(data).digest();\n}\n\nexports.nodeSha512 = nodeSha512;\n\nfunction nodeRipemd160(data) {\n  return crypto_1.default.createHash(constants_1.RIPEMD160_NODE_ALGO).update(data).digest();\n}\n\nexports.nodeRipemd160 = nodeRipemd160;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAOA;;AAEA,SAAgBA,eAAhB,CAAgCC,MAAhC,EAA8C;AAC5C,SAAOC,iBAAOC,WAAP,CAAmBF,MAAnB,CAAP;AACD;;AAFDG;;AAIA,SAAgBC,cAAhB,CAA+BC,EAA/B,EAA2CC,GAA3C,EAAwDC,IAAxD,EAAoE;AAClE,QAAMC,MAAM,GAAGP,iBAAOQ,cAAP,CAAsBC,yBAAtB,EAAqCJ,GAArC,EAA0CD,EAA1C,CAAf;AACA,SAAOM,wBAAcH,MAAM,CAACI,MAAP,CAAcL,IAAd,CAAd,EAAmCC,MAAM,CAACK,KAAP,EAAnC,CAAP;AACD;;AAHDV;;AAKA,SAAgBW,cAAhB,CAA+BT,EAA/B,EAA2CC,GAA3C,EAAwDC,IAAxD,EAAoE;AAClE,QAAMQ,QAAQ,GAAGd,iBAAOe,gBAAP,CAAwBN,yBAAxB,EAAuCJ,GAAvC,EAA4CD,EAA5C,CAAjB;AACA,SAAOM,wBAAcI,QAAQ,CAACH,MAAT,CAAgBL,IAAhB,CAAd,EAAqCQ,QAAQ,CAACF,KAAT,EAArC,CAAP;AACD;;AAHDV;;AAKA,SAAgBc,kBAAhB,CAAmCX,GAAnC,EAAgDC,IAAhD,EAA4D;AAC1D,SAAON,iBACJiB,UADI,CACOR,0BADP,EACuBS,MAAM,CAACC,IAAP,CAAYd,GAAZ,CADvB,EAEJM,MAFI,CAEGL,IAFH,EAGJc,MAHI,EAAP;AAID;;AALDlB;;AAOA,SAAgBmB,kBAAhB,CAAmChB,GAAnC,EAAgDC,IAAhD,EAA4D;AAC1D,SAAON,iBACJiB,UADI,CACOR,4BADP,EACyBS,MAAM,CAACC,IAAP,CAAYd,GAAZ,CADzB,EAEJM,MAFI,CAEGL,IAFH,EAGJc,MAHI,EAAP;AAID;;AALDlB;;AAOA,SAAgBoB,UAAhB,CAA2BhB,IAA3B,EAAuC;AACrC,SAAON,iBACJuB,UADI,CACOd,4BADP,EAEJE,MAFI,CAEGL,IAFH,EAGJc,MAHI,EAAP;AAID;;AALDlB;;AAOA,SAAgBsB,UAAhB,CAA2BlB,IAA3B,EAAuC;AACrC,SAAON,iBACJuB,UADI,CACOd,4BADP,EAEJE,MAFI,CAEGL,IAFH,EAGJc,MAHI,EAAP;AAID;;AALDlB;;AAOA,SAAgBuB,aAAhB,CAA8BnB,IAA9B,EAA0C;AACxC,SAAON,iBACJuB,UADI,CACOd,+BADP,EAEJE,MAFI,CAEGL,IAFH,EAGJc,MAHI,EAAP;AAID;;AALDlB","names":["nodeRandomBytes","length","crypto_1","randomBytes","exports","nodeAesEncrypt","iv","key","data","cipher","createCipheriv","constants_1","helpers_1","update","final","nodeAesDecrypt","decipher","createDecipheriv","nodeHmacSha256Sign","createHmac","Buffer","from","digest","nodeHmacSha512Sign","nodeSha256","createHash","nodeSha512","nodeRipemd160"],"sources":["../../../src/lib/node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}