{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst pbkdf2_1 = __importDefault(require(\"pbkdf2\"));\n\nconst random_1 = require(\"./random\");\n\nconst constants_1 = require(\"./constants\");\n\nfunction pbkdf2(password) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      pbkdf2_1.default.pbkdf2(password, random_1.randomBytes(constants_1.LENGTH_16), constants_1.LENGTH_1, constants_1.KEY_LENGTH, (err, key) => {\n        if (err) return reject(err);\n        resolve(key);\n      });\n    });\n  });\n}\n\nexports.pbkdf2 = pbkdf2;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA,SAAsBA,MAAtB,CAA6BC,QAA7B,EAA6C;;AAC3C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACrCC,uBAAQL,MAAR,CACEC,QADF,EAEEK,qBAAYC,qBAAZ,CAFF,EAGEA,oBAHF,EAIEA,sBAJF,EAKE,CAACC,GAAD,EAAMC,GAAN,KAAa;AACX,YAAID,GAAJ,EAAS,OAAOJ,MAAM,CAACI,GAAD,CAAb;AACTL,eAAO,CAACM,GAAD,CAAP;AACD,OARH;AAUD,KAXM,CAAP;AAYD;AAAA;;AAbDC","names":["pbkdf2","password","Promise","resolve","reject","pbkdf2_1","random_1","constants_1","err","key","exports"],"sources":["../../src/pbkdf2.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}