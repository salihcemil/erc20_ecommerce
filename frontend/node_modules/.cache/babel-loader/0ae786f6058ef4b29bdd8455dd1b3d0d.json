{"ast":null,"code":"var _jsxFileName = \"/Users/salihcemil/Desktop/projects/ecommerce/frontend/src/Store.js\";\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:4000';\nconst SellerPubKey = '003X9PaFsuG2XUxV6OPHYiTR6buqNPCbeZzOxtCiuWE='; //0xf73...\n\nconst ITEMS = [{\n  id: 1,\n  price: ethers.utils.parseEther('1')\n}, {\n  id: 2,\n  price: ethers.utils.parseEther('2')\n}];\n\nfunction Store(_ref) {\n  let {\n    paymentProcessor,\n    usdt,\n    publicKey\n  } = _ref;\n\n  const buy = async item => {\n    //console.log(publicKey);\n    //const response1 = await axios.get(`${API_URL}/api/getPaymentId/${item.id}/${publicKey}`);\n    const response1 = axios.post(`${API_URL}/api/getPaymentId`, {\n      itemId: item.id,\n      pubKey: item.publicKey,\n      name: 'Fred Flintstone',\n      mail: 'fflinstone@yeeha.com',\n      address: 'stonehange st no 34',\n      phone: '+9012345678'\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    let instance = await usdt.deployed();\n    const tx1 = await instance.approve(paymentProcessor.address, item.price);\n    await tx1.wait(); //const tx1 = await usdt.approve(paymentProcessor.address, item.price);  \n    //const response3 = await axios.get(`${API_URL}/api/encryptWithPK/'satoshi nakomoto'/${publicKey}`);\n    //console.log('itemPrice: '+item.price + ' paymentId:' + response1.data.paymentId);\n\n    const paymentObj = {\n      \"PaymentId\": response1.data\n    };\n    let paymentString = JSON.stringify(paymentObj);\n    const encrypted = await axios.get(`${API_URL}/api/encryptWithPK/${paymentString}/${SellerPubKey}`);\n    console.log(encrypted);\n    const tx2 = await paymentProcessor.pay(item.price, JSON.stringify(encrypted));\n    const receipt = await tx2.wait();\n    await new Promise(resolve => setTimeout(resolve, 5000));\n    const response2 = await axios.get(`${API_URL}/api/getItemUrl/${response1.data}`);\n    console.log(response2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [\"Buy Item1 - \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"front-weight-bold\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary float-right\",\n        onClick: () => buy(ITEMS[0]),\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [\"Buy Item2 - \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"front-weight-bold\",\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary float-right\",\n        onClick: () => buy(ITEMS[1]),\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/salihcemil/Desktop/projects/ecommerce/frontend/src/Store.js"],"names":["React","ethers","axios","API_URL","SellerPubKey","ITEMS","id","price","utils","parseEther","Store","paymentProcessor","usdt","publicKey","buy","item","response1","post","itemId","pubKey","name","mail","address","phone","then","response","console","log","catch","error","instance","deployed","tx1","approve","wait","paymentObj","data","paymentString","JSON","stringify","encrypted","get","tx2","pay","receipt","Promise","resolve","setTimeout","response2"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {ethers} from 'ethers';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:4000';\nconst SellerPubKey = '003X9PaFsuG2XUxV6OPHYiTR6buqNPCbeZzOxtCiuWE='; //0xf73...\n\nconst ITEMS = [{\n    id: 1,\n    price: ethers.utils.parseEther('1')\n},{\n    id: 2,\n    price: ethers.utils.parseEther('2')\n}\n];\n\nfunction Store({ paymentProcessor, usdt, publicKey }) {\n    const buy = async item => {\n    //console.log(publicKey);\n      //const response1 = await axios.get(`${API_URL}/api/getPaymentId/${item.id}/${publicKey}`);\n\n      const response1 = axios.post(`${API_URL}/api/getPaymentId`, {\n                            itemId: item.id,\n                            pubKey: item.publicKey,\n                            name: 'Fred Flintstone',\n                            mail: 'fflinstone@yeeha.com',\n                            address: 'stonehange st no 34',\n                            phone: '+9012345678'\n                        })\n                        .then(function (response) {\n                            console.log(response);\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        });\n\n      let instance = await usdt.deployed();\n      const  tx1 = await instance.approve(paymentProcessor.address, item.price);\n      await tx1.wait();\n      //const tx1 = await usdt.approve(paymentProcessor.address, item.price);  \n      //const response3 = await axios.get(`${API_URL}/api/encryptWithPK/'satoshi nakomoto'/${publicKey}`);\n      //console.log('itemPrice: '+item.price + ' paymentId:' + response1.data.paymentId);\n      const paymentObj = {\"PaymentId\": response1.data};\n      let paymentString = JSON.stringify(paymentObj);\n\n      const encrypted = await axios.get(`${API_URL}/api/encryptWithPK/${paymentString}/${SellerPubKey}`);\n      console.log(encrypted);\n\n      const tx2 = await paymentProcessor.pay(item.price, JSON.stringify(encrypted));\n      const receipt = await tx2.wait();\n  \n      await new Promise(resolve => setTimeout(resolve, 5000)); \n      const response2 = await axios.get(`${API_URL}/api/getItemUrl/${response1.data}`)\n      console.log(response2);\n    };\n\n    return (\n        <ul className='list-group'>\n            <li className='list-group-item'>\n                Buy Item1 - <span className='front-weight-bold'>3</span>\n                <button \n                type='button'\n                className='btn btn-primary float-right'\n                onClick={()=>buy(ITEMS[0])}>\n                    Buy\n                </button>\n            </li>\n            <li className='list-group-item'>\n                Buy Item2 - <span className='front-weight-bold'>4</span>\n                <button type='button'\n                className='btn btn-primary float-right'\n                onClick={()=>buy(ITEMS[1])}>\n                    Buy\n                </button>\n            </li>\n        </ul>\n    )\n}\n\nexport default Store;"]},"metadata":{},"sourceType":"module"}