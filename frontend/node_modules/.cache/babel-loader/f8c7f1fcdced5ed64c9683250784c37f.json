{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HEX_ENC = 'hex';\nexports.UTF8_ENC = 'utf8';\nexports.ENCRYPT_OP = 'encrypt';\nexports.DECRYPT_OP = 'decrypt';\nexports.SIGN_OP = 'sign';\nexports.VERIFY_OP = 'verify';\nexports.LENGTH_0 = 0;\nexports.LENGTH_1 = 1;\nexports.LENGTH_16 = 16;\nexports.LENGTH_32 = 32;\nexports.LENGTH_64 = 64;\nexports.LENGTH_128 = 128;\nexports.LENGTH_256 = 256;\nexports.LENGTH_512 = 512;\nexports.LENGTH_1024 = 1024;\nexports.AES_LENGTH = exports.LENGTH_256;\nexports.HMAC_LENGTH = exports.LENGTH_256;\nexports.AES_BROWSER_ALGO = 'AES-CBC';\nexports.HMAC_BROWSER_ALGO = `SHA-${exports.AES_LENGTH}`;\nexports.HMAC_BROWSER = 'HMAC';\nexports.SHA256_BROWSER_ALGO = 'SHA-256';\nexports.SHA512_BROWSER_ALGO = 'SHA-512';\nexports.AES_NODE_ALGO = `aes-${exports.AES_LENGTH}-cbc`;\nexports.HMAC_NODE_ALGO = `sha${exports.HMAC_LENGTH}`;\nexports.SHA256_NODE_ALGO = 'sha256';\nexports.SHA512_NODE_ALGO = 'sha512';\nexports.RIPEMD160_NODE_ALGO = 'ripemd160';\nexports.PREFIX_LENGTH = exports.LENGTH_1;\nexports.KEY_LENGTH = exports.LENGTH_32;\nexports.IV_LENGTH = exports.LENGTH_16;\nexports.MAC_LENGTH = exports.LENGTH_32;\nexports.DECOMPRESSED_LENGTH = exports.LENGTH_64;\nexports.PREFIXED_KEY_LENGTH = exports.KEY_LENGTH + exports.PREFIX_LENGTH;\nexports.PREFIXED_DECOMPRESSED_LENGTH = exports.DECOMPRESSED_LENGTH + exports.PREFIX_LENGTH;\nexports.MAX_KEY_LENGTH = exports.LENGTH_1024;\nexports.MAX_MSG_LENGTH = exports.LENGTH_32;\nexports.EMPTY_BUFFER = Buffer.from(new Uint8Array(exports.LENGTH_0));\nexports.EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', exports.HEX_ENC);\nexports.ZERO32 = Buffer.alloc(exports.LENGTH_32, exports.LENGTH_0);\nexports.ERROR_BAD_MAC = 'Bad MAC';\nexports.ERROR_BAD_PRIVATE_KEY = 'Bad private key';\nexports.ERROR_BAD_PUBLIC_KEY = 'Bad public key';\nexports.ERROR_EMPTY_MESSAGE = 'Message should not be empty';\nexports.ERROR_MESSAGE_TOO_LONG = 'Message is too long';","map":{"version":3,"mappings":";;;;;AAAaA,kBAAU,KAAV;AACAA,mBAAW,MAAX;AAEAA,qBAAa,SAAb;AACAA,qBAAa,SAAb;AAEAA,kBAAU,MAAV;AACAA,oBAAY,QAAZ;AAEAA,mBAAW,CAAX;AACAA,mBAAW,CAAX;AACAA,oBAAY,EAAZ;AACAA,oBAAY,EAAZ;AACAA,oBAAY,EAAZ;AACAA,qBAAa,GAAb;AACAA,qBAAa,GAAb;AACAA,qBAAa,GAAb;AACAA,sBAAc,IAAd;AAEAA,qBAAaA,kBAAb;AACAA,sBAAcA,kBAAd;AAEAA,2BAAmB,SAAnB;AACAA,4BAAoB,OAAOA,kBAAU,EAArC;AACAA,uBAAe,MAAf;AAEAA,8BAAsB,SAAtB;AACAA,8BAAsB,SAAtB;AAEAA,wBAAgB,OAAOA,kBAAU,MAAjC;AACAA,yBAAiB,MAAMA,mBAAW,EAAlC;AAEAA,2BAAmB,QAAnB;AACAA,2BAAmB,QAAnB;AACAA,8BAAsB,WAAtB;AAEAA,wBAAgBA,gBAAhB;AACAA,qBAAaA,iBAAb;AACAA,oBAAYA,iBAAZ;AACAA,qBAAaA,iBAAb;AACAA,8BAAsBA,iBAAtB;AAEAA,8BAAsBA,qBAAaA,qBAAnC;AACAA,uCAA+BA,8BAAsBA,qBAArD;AAEAA,yBAAiBA,mBAAjB;AACAA,yBAAiBA,iBAAjB;AAEAA,uBAAeC,MAAM,CAACC,IAAP,CAAY,IAAIC,UAAJ,CAAeH,gBAAf,CAAZ,CAAf;AACAA,yBAAiBC,MAAM,CAACC,IAAP,CAC5B,kEAD4B,EAE5BF,eAF4B,CAAjB;AAIAA,iBAASC,MAAM,CAACG,KAAP,CAAaJ,iBAAb,EAAwBA,gBAAxB,CAAT;AAEAA,wBAAgB,SAAhB;AACAA,gCAAwB,iBAAxB;AACAA,+BAAuB,gBAAvB;AAEAA,8BAAsB,6BAAtB;AACAA,iCAAyB,qBAAzB","names":["exports","Buffer","from","Uint8Array","alloc"],"sources":["../../../src/constants/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}