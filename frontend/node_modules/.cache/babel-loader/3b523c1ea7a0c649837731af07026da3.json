{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst env_1 = require(\"./lib/env\");\n\nconst browser_1 = require(\"./lib/browser\");\n\nconst fallback_1 = require(\"./lib/fallback\");\n\nconst node_1 = require(\"./lib/node\");\n\nconst helpers_1 = require(\"./helpers\");\n\nfunction hmacSha256Sign(key, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (env_1.isBrowser()) {\n      result = yield browser_1.browserHmacSha256Sign(key, msg);\n    } else if (env_1.isNode()) {\n      result = node_1.nodeHmacSha256Sign(key, msg);\n    } else {\n      result = fallback_1.fallbackHmacSha256Sign(key, msg);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha256Sign = hmacSha256Sign;\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (env_1.isBrowser()) {\n      const expectedSig = yield browser_1.browserHmacSha256Sign(key, msg);\n      result = helpers_1.equalConstTime(expectedSig, sig);\n    } else if (env_1.isNode()) {\n      const expectedSig = node_1.nodeHmacSha256Sign(key, msg);\n      result = helpers_1.equalConstTime(expectedSig, sig);\n    } else {\n      const expectedSig = fallback_1.fallbackHmacSha256Sign(key, msg);\n      result = helpers_1.equalConstTime(expectedSig, sig);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha256Verify = hmacSha256Verify;\n\nfunction hmacSha512Sign(key, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (env_1.isBrowser()) {\n      result = yield browser_1.browserHmacSha512Sign(key, msg);\n    } else if (env_1.isNode()) {\n      result = node_1.nodeHmacSha512Sign(key, msg);\n    } else {\n      result = fallback_1.fallbackHmacSha512Sign(key, msg);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha512Sign = hmacSha512Sign;\n\nfunction hmacSha512Verify(key, msg, sig) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (env_1.isNode()) {\n      const expectedSig = node_1.nodeHmacSha512Sign(key, msg);\n      result = helpers_1.equalConstTime(expectedSig, sig);\n    } else {\n      const expectedSig = fallback_1.fallbackHmacSha512Sign(key, msg);\n      result = helpers_1.equalConstTime(expectedSig, sig);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha512Verify = hmacSha512Verify;\n\nfunction hmacSha256SignSync(key, msg) {\n  let result;\n\n  if (env_1.isNode()) {\n    result = node_1.nodeHmacSha256Sign(key, msg);\n  } else {\n    result = fallback_1.fallbackHmacSha256Sign(key, msg);\n  }\n\n  return result;\n}\n\nexports.hmacSha256SignSync = hmacSha256SignSync;\n\nfunction hmacSha256VerifySync(key, msg, sig) {\n  let result;\n\n  if (env_1.isNode()) {\n    const expectedSig = node_1.nodeHmacSha256Sign(key, msg);\n    result = helpers_1.equalConstTime(expectedSig, sig);\n  } else {\n    const expectedSig = fallback_1.fallbackHmacSha256Sign(key, msg);\n    result = helpers_1.equalConstTime(expectedSig, sig);\n  }\n\n  return result;\n}\n\nexports.hmacSha256VerifySync = hmacSha256VerifySync;\n\nfunction hmacSha512SignSync(key, msg) {\n  let result;\n\n  if (env_1.isNode()) {\n    result = node_1.nodeHmacSha512Sign(key, msg);\n  } else {\n    result = fallback_1.fallbackHmacSha512Sign(key, msg);\n  }\n\n  return result;\n}\n\nexports.hmacSha512SignSync = hmacSha512SignSync;\n\nfunction hmacSha512VerifySync(key, msg, sig) {\n  let result;\n\n  if (env_1.isNode()) {\n    const expectedSig = node_1.nodeHmacSha512Sign(key, msg);\n    result = helpers_1.equalConstTime(expectedSig, sig);\n  } else {\n    const expectedSig = fallback_1.fallbackHmacSha512Sign(key, msg);\n    result = helpers_1.equalConstTime(expectedSig, sig);\n  }\n\n  return result;\n}\n\nexports.hmacSha512VerifySync = hmacSha512VerifySync;","map":{"version":3,"mappings":"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","names":["hmacSha256Sign","key","msg","result","env_1","browser_1","node_1","fallback_1","exports","hmacSha256Verify","sig","expectedSig","helpers_1","hmacSha512Sign","hmacSha512Verify","hmacSha256SignSync","hmacSha256VerifySync","hmacSha512SignSync","hmacSha512VerifySync"],"sources":["../../src/hmac.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}