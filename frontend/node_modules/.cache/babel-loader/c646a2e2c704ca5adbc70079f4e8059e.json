{"ast":null,"code":"import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\n\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\n\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}","map":{"version":3,"sources":["/Users/salihcemil/Desktop/projects/ecommerce/node_modules/eth-crypto/dist/es/vrs.js"],"names":["utils","ethersUtils","fromString","hexString","arr","splitSignature","v","concat","toString","r","s","sig","joinSignature"],"mappings":"AAAA,SAASA,KAAK,IAAIC,WAAlB,QAAqC,QAArC;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AACpC,MAAIC,GAAG,GAAGH,WAAW,CAACI,cAAZ,CAA2BF,SAA3B,CAAV;AACA,SAAO;AACL;AACAG,IAAAA,CAAC,EAAE,KAAKC,MAAL,CAAYH,GAAG,CAACE,CAAJ,CAAME,QAAN,CAAe,EAAf,CAAZ,CAFE;AAGLC,IAAAA,CAAC,EAAEL,GAAG,CAACK,CAHF;AAILC,IAAAA,CAAC,EAAEN,GAAG,CAACM;AAJF,GAAP;AAMD;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASF,QAAT,CAAkBG,GAAlB,EAAuB;AAC5B,SAAOV,WAAW,CAACW,aAAZ,CAA0BD,GAA1B,CAAP;AACD","sourcesContent":["import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\n\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\n\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}"]},"metadata":{},"sourceType":"module"}