{"ast":null,"code":"import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeLeading0x } from './util';\nexport default function decryptWithPrivateKey(privateKey, encrypted) {\n  encrypted = parse(encrypted); // remove trailing '0x' from privateKey\n\n  var twoStripped = removeLeading0x(privateKey);\n  var encryptedBuffer = {\n    iv: Buffer.from(encrypted.iv, 'hex'),\n    ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n    ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n    mac: Buffer.from(encrypted.mac, 'hex')\n  };\n  return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n    return decryptedBuffer.toString();\n  });\n}","map":{"version":3,"sources":["/Users/salihcemil/Desktop/projects/ecommerce/node_modules/eth-crypto/dist/es/decrypt-with-private-key.js"],"names":["decrypt","parse","removeLeading0x","decryptWithPrivateKey","privateKey","encrypted","twoStripped","encryptedBuffer","iv","Buffer","from","ephemPublicKey","ciphertext","mac","then","decryptedBuffer","toString"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,eAAe,SAASC,qBAAT,CAA+BC,UAA/B,EAA2CC,SAA3C,EAAsD;AACnEA,EAAAA,SAAS,GAAGJ,KAAK,CAACI,SAAD,CAAjB,CADmE,CACrC;;AAE9B,MAAIC,WAAW,GAAGJ,eAAe,CAACE,UAAD,CAAjC;AACA,MAAIG,eAAe,GAAG;AACpBC,IAAAA,EAAE,EAAEC,MAAM,CAACC,IAAP,CAAYL,SAAS,CAACG,EAAtB,EAA0B,KAA1B,CADgB;AAEpBG,IAAAA,cAAc,EAAEF,MAAM,CAACC,IAAP,CAAYL,SAAS,CAACM,cAAtB,EAAsC,KAAtC,CAFI;AAGpBC,IAAAA,UAAU,EAAEH,MAAM,CAACC,IAAP,CAAYL,SAAS,CAACO,UAAtB,EAAkC,KAAlC,CAHQ;AAIpBC,IAAAA,GAAG,EAAEJ,MAAM,CAACC,IAAP,CAAYL,SAAS,CAACQ,GAAtB,EAA2B,KAA3B;AAJe,GAAtB;AAMA,SAAOb,OAAO,CAACS,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyB,KAAzB,CAAD,EAAkCC,eAAlC,CAAP,CAA0DO,IAA1D,CAA+D,UAAUC,eAAV,EAA2B;AAC/F,WAAOA,eAAe,CAACC,QAAhB,EAAP;AACD,GAFM,CAAP;AAGD","sourcesContent":["import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeLeading0x } from './util';\nexport default function decryptWithPrivateKey(privateKey, encrypted) {\n  encrypted = parse(encrypted); // remove trailing '0x' from privateKey\n\n  var twoStripped = removeLeading0x(privateKey);\n  var encryptedBuffer = {\n    iv: Buffer.from(encrypted.iv, 'hex'),\n    ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n    ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n    mac: Buffer.from(encrypted.mac, 'hex')\n  };\n  return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n    return decryptedBuffer.toString();\n  });\n}"]},"metadata":{},"sourceType":"module"}