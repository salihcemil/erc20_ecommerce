[{"/Users/salihcemil/Desktop/commerce/frontend/src/index.js":"1","/Users/salihcemil/Desktop/commerce/frontend/src/App.js":"2","/Users/salihcemil/Desktop/commerce/frontend/src/ethereum.js":"3","/Users/salihcemil/Desktop/commerce/frontend/src/Store.js":"4","/Users/salihcemil/Desktop/commerce/frontend/src/cards/CardUI.jsx":"5","/Users/salihcemil/Desktop/commerce/frontend/src/cards/Cards.jsx":"6"},{"size":313,"mtime":1650623393799,"results":"7","hashOfConfig":"8"},{"size":1759,"mtime":1650530299099,"results":"9","hashOfConfig":"8"},{"size":1061,"mtime":1648798407158,"results":"10","hashOfConfig":"8"},{"size":4703,"mtime":1650882633682,"results":"11","hashOfConfig":"8"},{"size":3272,"mtime":1650882861419,"results":"12","hashOfConfig":"8"},{"size":1540,"mtime":1650622056762,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},"ni7c6t",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"22","usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/salihcemil/Desktop/commerce/frontend/src/index.js",["38"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nimport Card from './cards/Cards';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Card /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["39","40"],"/Users/salihcemil/Desktop/commerce/frontend/src/App.js",["41","42"],[],"import React, { useState, useEffect } from 'react';\nimport Store from './Store.js';\nimport getBlockchain from './ethereum.js';\n\nfunction App() {\n  const [paymentProcessor, setPaymentProcessor] = useState(undefined); \n  const [usdt, setUsdt] = useState(undefined); \n  const [publicKey, setPublicKey] = useState(undefined);\n\n  useEffect(() => {\n    const init = async () => {\n      const { paymentProcessor, usdt } = await getBlockchain();\n      setPaymentProcessor(paymentProcessor);\n      setUsdt(usdt);\n\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      window.ethereum.request({method: 'eth_getEncryptionPublicKey', params: [accounts[0]]}).\n        then((result) => {\n          setPublicKey(result);\n        })\n        .catch((error) => {\n            console.error(error);\n          });\n    }\n    init();\n  }, []);\n\n  if(typeof window.ethereum === 'undefined') {\n    return (\n      <div className='container'>\n        <div className='col-sm-1'>\n          <h1>ERC20 Tokens Ecommerce App</h1>\n          <p>You need to install the latest version of Metamask to use this app. MEtamask is an Ethereum wallet, available as a Google chrome extension.</p>\n          <ul>\n            <li>Go to the <a href='https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn'>Metamask page</a> on the chrome webstore and install it</li>  \n            <li>If you already have it installed, uninstall and re-install it</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='container'>\n      <div className='col-sm-12'>\n        <h1></h1>\n        <Store paymentProcessor={paymentProcessor} usdt={usdt} publicKey={publicKey} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","/Users/salihcemil/Desktop/commerce/frontend/src/ethereum.js",[],[],"/Users/salihcemil/Desktop/commerce/frontend/src/Store.js",["43","44","45","46","47","48"],[],"import React, { useState, Component } from 'react';\nimport {ethers} from 'ethers';\nimport axios from 'axios';\nimport conf from './config.json'; \n\nimport Card from './cards/CardUI';\nimport '../src/cards/card-style.css';\n\nimport img1 from './images/aragorn.jpg';\nimport img2 from './images/legolas.jpg';\nimport img3 from './images/gimli.jpg';\nimport img4 from './images/gandalf.jpg';\nimport img5 from './images/frodo.jpg';\nimport img6 from './images/baramir.jpg';\n\n\nconst API_URL = conf.API_URL;\nconst SellerPubKey = '003X9PaFsuG2XUxV6OPHYiTR6buqNPCbeZzOxtCiuWE=';\n\nvar PersonalInfo = {'name':'', 'address':'', 'mail':'', 'phone':''};\n\nfunction Store({ paymentProcessor, usdt, publicKey }) {\n\n    function handleChange(event) {\n        if(event.target.name === 'name'){PersonalInfo.name = event.target.value}\n        else if(event.target.name === 'email'){PersonalInfo.mail = event.target.value}\n        else if(event.target.name === 'address'){PersonalInfo.address = event.target.value}\n        else if(event.target.name === 'phone'){PersonalInfo.phone = event.target.value}\n      }\n    \n    async function getPersonalInfo(){\n        return PersonalInfo;\n    }\n\n    return (\n        <ul className='list-group'>\n            <fieldset>\n            <legend>Personal Info:</legend>\n            <li className='list-group-item'>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Name: </td>\n                            <td>\n                                <input type=\"text\" name=\"name\" placeholder=\"Mick Jagger\" onChange={handleChange}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>E-Mail: </td>\n                            <td>\n                                <input type=\"email\" name=\"email\" placeholder=\"mickjagger@yeeha.com\" onChange={handleChange}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Address: </td>\n                            <td>\n                                <input type=\"address\" name=\"address\" placeholder=\"marasi dr no 12 dubai\" onChange={handleChange}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Phone: </td>\n                            <td>\n                                <input type=\"phone\" name=\"phone\" placeholder=\"+971584563526\" onChange={handleChange}></input>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </li>\n            </fieldset>\n            \n\n<fieldset>\n<legend>Items:</legend>\n<div className=\"list-group-item\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <Card imgsrc={img1} title={\"Aragorn\"} description={\"8 USDT\"} itemId={\"0\"} publicKey={publicKey} usdt={usdt} paymentProcessor={paymentProcessor} personalInfo={PersonalInfo} getName = {getPersonalInfo}/>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <Card imgsrc={img2} title={\"Legolas\"} description={\"6 USDT\"} itemId={\"1\"} publicKey={publicKey} usdt={usdt} paymentProcessor={paymentProcessor} personalInfo={PersonalInfo} getName = {getPersonalInfo}/>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <Card imgsrc={img3} title={\"Gimli\"} description={\"6 USDT\"} itemId={\"2\"} publicKey={publicKey} usdt={usdt} paymentProcessor={paymentProcessor} personalInfo={PersonalInfo} getName = {getPersonalInfo}/>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <Card imgsrc={img4} title={\"Gandalf\"} description={\"7 USDT\"} itemId={\"3\"} publicKey={publicKey} usdt={usdt} paymentProcessor={paymentProcessor} personalInfo={PersonalInfo} getName = {getPersonalInfo}/>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <Card imgsrc={img5} title={\"Frodo\"} description={\"4 USDT\"} itemId={\"4\"} publicKey={publicKey} usdt={usdt} paymentProcessor={paymentProcessor} personalInfo={PersonalInfo} getName = {getPersonalInfo}/>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <Card imgsrc={img6} title={\"Baramir\"} description={\"4 USDT\"} itemId={\"5\"} publicKey={publicKey} usdt={usdt} paymentProcessor={paymentProcessor} personalInfo={PersonalInfo} getName = {getPersonalInfo}/>\n                    </div>\n                </div>\n            </div>\n</fieldset>\n            \n        </ul>\n    )\n}\n\nexport default Store;",["49","50"],"/Users/salihcemil/Desktop/commerce/frontend/src/cards/CardUI.jsx",["51","52","53"],[],"import React from \"react\";\nimport {ethers} from 'ethers';\nimport axios from 'axios';\nimport './card-style.css';\nimport conf from '../config.json'; \n\nconst API_URL = conf.API_URL;\nconst SellerPubKey = '003X9PaFsuG2XUxV6OPHYiTR6buqNPCbeZzOxtCiuWE=';\n\nconst ITEMS = [{\n    id: '0',\n    price: ethers.utils.parseEther('8')\n},{\n    id: '1',\n    price: ethers.utils.parseEther('6')\n},\n{\n    id: '2',\n    price: ethers.utils.parseEther('6')\n},\n{\n    id: '3',\n    price: ethers.utils.parseEther('7')\n},\n{\n    id: '4',\n    price: ethers.utils.parseEther('4')\n},\n{\n    id: '5',\n    price: ethers.utils.parseEther('4')\n}\n];\n\nconst Card = props => {\n    const buy = async item => {\n        var personalInfo = await props.getName();\n        if(personalInfo.name === '' || personalInfo.name === undefined ||\n        personalInfo.mail === '' || personalInfo.mail === undefined ||\n        personalInfo.address === '' || personalInfo.address === undefined||\n        personalInfo.phone === '' || personalInfo.phone === undefined) {\n            alert('User info should be completed!');\n            return;\n        }\n\n        //generate the user info\n        const requestPaymentObject = {\n            publicKey: props.publicKey,\n            itemId: item.id,\n            name: personalInfo.name,\n            mail: personalInfo.mail,\n            address: personalInfo.address,\n            phone: personalInfo.phone\n        };\n\n        //request server to create a payment object and return a GUID related the payment\n        const payment = await axios.post(`${API_URL}/api/getPaymentId`, requestPaymentObject);\n        \n        //let the Payment Processor contract to transfer amount of the price\n        let instance = await props.usdt.deployed();\n        const tx1 = await instance.approve(props.paymentProcessor.address, item.price);\n        await tx1.wait();\n\n        //encrypt the payment info with the seller's public key. Although the network is public \n        //no one who listens to the Ethereum transactions or events cannot read the shopping data unless he/she has the private key\n        const encrypted = await axios.post(`${API_URL}/api/encryptWithPK/`, {\n            message: payment.data,\n            pubKey: SellerPubKey\n            });\n\n        //run Payment Processor's pay function\n        const tx2 = await props.paymentProcessor.pay(item.price, JSON.stringify(encrypted));\n        const receipt = await tx2.wait();\n    \n        await new Promise(resolve => setTimeout(resolve, 5000)); \n        const paymentResult = await axios.get(`${API_URL}/api/getPaymentResult/${payment.data}`)\n        console.log(paymentResult);\n        alert(paymentResult.data.result);\n    }\n\n    \n    return(\n        <div className=\"card text-center shadow\">\n            <div className=\"overflow\">\n                <img src={props.imgsrc} alt=\"Image 1\" className=\"card-img-top\"/>\n            </div>\n            <div className=\"card-body text-dark\">\n                <h4 className=\"card-title\">{props.title}</h4>\n                <p className=\"card-text tect-secondary\">\n                    {props.description}\n                </p>\n                <a className=\"btn btn-outline-success\" onClick={()=>buy(ITEMS[props.itemId])}>Buy</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","/Users/salihcemil/Desktop/commerce/frontend/src/cards/Cards.jsx",[],[],{"ruleId":"54","severity":1,"message":"55","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":12},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":17,"column":93,"nodeType":"64","messageId":"65","endLine":17,"endColumn":94,"fix":"66"},{"ruleId":"67","severity":1,"message":"68","line":46,"column":9,"nodeType":"69","endLine":46,"endColumn":13},{"ruleId":"54","severity":1,"message":"70","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"71","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"72","line":2,"column":9,"nodeType":"56","messageId":"57","endLine":2,"endColumn":15},{"ruleId":"54","severity":1,"message":"73","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":13},{"ruleId":"54","severity":1,"message":"74","line":17,"column":7,"nodeType":"56","messageId":"57","endLine":17,"endColumn":14},{"ruleId":"54","severity":1,"message":"75","line":18,"column":7,"nodeType":"56","messageId":"57","endLine":18,"endColumn":19},{"ruleId":"58","replacedBy":"76"},{"ruleId":"60","replacedBy":"77"},{"ruleId":"54","severity":1,"message":"78","line":73,"column":15,"nodeType":"56","messageId":"57","endLine":73,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":85,"column":17,"nodeType":"69","endLine":85,"endColumn":81},{"ruleId":"81","severity":1,"message":"82","line":92,"column":17,"nodeType":"69","endLine":92,"endColumn":95},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"85","text":"86"},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","'Component' is defined but never used.","'ethers' is defined but never used.","'axios' is defined but never used.","'API_URL' is assigned a value but never used.","'SellerPubKey' is assigned a value but never used.",["83"],["84"],"'receipt' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[679,689],"\n        ."]